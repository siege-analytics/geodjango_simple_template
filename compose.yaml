# Simplified Docker Compose for GeoDjango
# No complex abstractions, just straightforward service definitions

services:
  postgis:
    image: postgis/postgis:latest
    container_name: geodjango_postgis
    restart: unless-stopped
    environment:
      POSTGRES_DB: geodjango_database
      POSTGRES_USER: dheerajchand
      POSTGRES_PASSWORD: strongpasswd
      POSTGRES_HOST_AUTH_METHOD: trust
      PGDATA: /var/lib/postgresql/data
    ports:
      - "54321:5432"
    volumes:
      - geodjango_pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dheerajchand -d geodjango_database"]
      interval: 10s
      retries: 5
    networks:
      - geodjango_network

  webserver:
    build:
      context: ./docker
      args:
        UBUNTU_BASE_IMAGE: ubuntu:jammy
    image: geodjango_webserver
    container_name: geodjango_webserver
    restart: unless-stopped
    environment:
      # Django
      DEBUG: 1
      SECRET_KEY: afdawango
      DJANGO_ALLOWED_HOSTS: "*"
      # Database
      SQL_ENGINE: django.contrib.gis.db.backends.postgis
      SQL_HOST: postgis
      SQL_DATABASE: geodjango_database
      SQL_USER: dheerajchand
      SQL_PASSWORD: strongpasswd
      SQL_PORT: 5432
      # Gunicorn
      GUNICORN_HOST: 0.0.0.0
      GUNICORN_PORT: 8000
      GUNICORN_WORKERS: 4
      GUNICORN_TIMEOUT: 120
    ports:
      - "8000:8000"
    volumes:
      - ./app:/usr/src/app
      - static_volume:/home/app/web/staticfiles
    depends_on:
      postgis:
        condition: service_healthy
    networks:
      - geodjango_network
    command: sh -c "/opt/venv/bin/python /opt/venv/bin/gunicorn hellodjango.wsgi:application --bind 0.0.0.0:8000 --workers 4 --timeout 120 --chdir /usr/src/app/hellodjango"

  nginx:
    build:
      context: docker/nginx
    image: geodjango_nginx
    container_name: geodjango_nginx
    restart: unless-stopped
    ports:
      - "1337:80"
    volumes:
      - static_volume:/home/app/web/staticfiles
    depends_on:
      - webserver
    networks:
      - geodjango_network

networks:
  geodjango_network:
    driver: bridge

volumes:
  geodjango_pg_data:
  static_volume:

