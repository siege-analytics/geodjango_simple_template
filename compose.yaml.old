services:

  webserver_python:
    image: geogjango_webserver
    container_name: geodjango_webserver
    build:
      context: ./docker
      args:
        UBUNTU_BASE_IMAGE: ${UBUNTU_BASE_IMAGE}
    command: sh -c "/opt/venv/bin/python /opt/venv/bin/gunicorn hellodjango.wsgi:application"
    #    command: sh -c "/opt/venv/bin/python /usr/src/app/hellodjango/manage.py runserver 8000"
    environment:
      - DEBUG
      - SECRET_KEY
      - DJANGO_ALLOWED_HOSTS
      - SQL_ENGINE
      - SQL_DATABASE
      - SQL_USER
      - SQL_PASSWORD
      - SQL_HOST
      - SQL_PORT
      - GUNICORN_HOST
      - GUNICORN_PORT
      - GUNICORN_WORKERS
      - GUNICORN_TIMEOUT
      - GUNICORN_ERROR_LOG
      - GUNICORN_ACCESS_LOG
      - GUNICORN_LOG_LEVEL
      - GUNICORN_WORKER_TMP_DIR
      - GUNICORN_CMD_ARGS
    networks:
      - geodjango_project_network
    volumes:
      - ./app:/usr/src/app
      - static_volume:/home/app/web/staticfiles
    ports:
      - 8000:8000
    depends_on:
      - postgis

  postgis:
    image: postgis/postgis:latest
    container_name: geodjango_postgis
    restart: always
    healthcheck:
      test: [ 'CMD-SHELL', 'psql -h localhost -U $${POSTGRES_USER} -c select 1 -d $${POSTGRES_DB}' ]
      interval: 10s
      retries: 5
    environment:
      - POSTGRES_DB
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - POSTGRES_HOST_AUTH_METHOD
      - PGDATA
    ports:
      - 54321:5432
    networks:
      - geodjango_project_network
    volumes:
      - geodjango_pg_data:${PGDATA}

  nginx:
    build:
      context: docker/nginx
    ports:
      - 1337:80
    depends_on:
      - webserver_python
    networks:
      - geodjango_project_network
    volumes:
      - static_volume:/home/app/web/staticfiles

networks:
  geodjango_project_network:

volumes:
  geodjango_pg_data:
  static_volume:
